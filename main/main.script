local message_to_loaded_collection = {}

function init(self)
	msg.post(".", "acquire_input_focus")
	msg.post("@render:", "use_fixed_fit_projection", { near = -1, far = 1 })

	math.randomseed(os.clock()*100000000000)
	defos.set_maximized(true)

	msg.post("#main_menu_proxy", "load")
end

function on_input(self, action_id, action)
	if action_id == hash("touch") and action.pressed then
		print("Touch!")
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("exit") then
		msg.post("@system:", "exit", {code = 0})
	elseif message_id == hash("proxy_loaded") then
		msg.post(sender, "init")
		msg.post(sender, "enable")
	elseif message_id == hash("proxy_unloaded") then
		
		print("Unloaded " .. sender)
	elseif message_id == hash("new_game_from_main") then
		print("new game from main")
		msg.post("#main_menu_proxy", "disable")
		msg.post("#main_menu_proxy", "final")
		msg.post("#main_menu_proxy", "unload")

		msg.post("#game_proxy", "load")
	end
end