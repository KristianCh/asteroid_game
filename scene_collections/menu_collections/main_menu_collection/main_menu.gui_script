local gooey = require "gooey.gooey"

function init(self)
	msg.post(".", "acquire_input_focus")
	self.continue_enable = true
end

function on_message(self, message_id, message, sender)
	if message_id == hash("disable_continue") then
		self.continue_enable = false
		gui.set_color(gui.get_node("continue_game_text"), vmath.vector4(0.25))
	end	
end

function on_input(self, action_id, action)
	if self.continue_enable then
		gooey.button("continue_game_button", action_id, action, function(button)
			msg.post("main:/manager", "continue_game_from_main")
		end, 
		function(button)
			if button.over_now then 
				gui.animate(button.node, "scale", vmath.vector3(1.3), gui.EASING_OUTQUINT, 0.5)
			elseif button.out_now then
				gui.animate(button.node, "scale", vmath.vector3(1), gui.EASING_OUTQUINT, 0.5)
			end
		end)
	end

	gooey.button("new_game_button", action_id, action, function(button)
		msg.post("main:/manager", "new_game_from_main")
	end, 
	function(button)
		if button.over_now then 
			gui.animate(button.node, "scale", vmath.vector3(1.3), gui.EASING_OUTQUINT, 0.5)
		elseif button.out_now then
			gui.animate(button.node, "scale", vmath.vector3(1), gui.EASING_OUTQUINT, 0.5)
		end
	end)

	gooey.button("settings_button", action_id, action, function(button)
		msg.post("main:/manager", "open_settings")
	end, 
	function(button)
		if button.over_now then 
			gui.animate(button.node, "scale", vmath.vector3(1.3), gui.EASING_OUTQUINT, 0.5)
		elseif button.out_now then
			gui.animate(button.node, "scale", vmath.vector3(1), gui.EASING_OUTQUINT, 0.5)
		end
	end)

	gooey.button("exit_button", action_id, action, function(button)
		msg.post("main:/manager", "exit_game")
	end, 
	function(button)
		if button.over_now then 
			gui.animate(button.node, "scale", vmath.vector3(1.3), gui.EASING_OUTQUINT, 0.5)
		elseif button.out_now then
			gui.animate(button.node, "scale", vmath.vector3(1), gui.EASING_OUTQUINT, 0.5)
		end
	end)
end