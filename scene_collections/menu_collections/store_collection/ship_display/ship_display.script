require "modules.store_texts"
go.property("id", 1)
go.property("cost", 100)
go.property("name", "")
go.property("text", "")

function init(self)
	for i=1,3 do
		if i ~= self.id then
			msg.post("#model_" .. i, "disable")
		end
	end
	self.text = ""
	self.name = ""
	msg.post("#gui", "set_position", {pos = go.get_position()})
end

function final(self)
	
end

function update(self, dt)
	local rot = vmath.quat_rotation_y(dt)
	go.set_rotation(go.get_rotation("#model_" .. self.id) * rot, "#model_" .. self.id)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("attempt_buy") then
		msg.post("/manager#manager", "attempt_buy", {type = self.id, cost = self.cost})
	elseif message_id == hash("set_flagship") then
		msg.post("/manager#manager", "set_flagship", {type = self.id})
	elseif message_id == hash("setup") then
		self.text = message.text
		self.name = message.name
		msg.post("#gui", "set_texts", {text = self.text, name = self.name, cost = self.cost})
	elseif message_id == hash("update_stats") then
		msg.post("#gui", "update_stats", message)
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
