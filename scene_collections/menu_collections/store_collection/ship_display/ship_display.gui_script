local gooey = require "gooey.gooey"
local richtext = require "richtext.richtext"

local function get_align()
	if gui.get_position(gui.get_node("main")).x < 320 then
		return richtext.ALIGN_LEFT
	elseif gui.get_position(gui.get_node("main")).x > 1600 then
		return richtext.ALIGN_RIGHT
	end
	return richtext.ALIGN_CENTER
end

local function get_pos()
	if gui.get_position(gui.get_node("main")).x < 320 then
		return vmath.vector3(-100, 0, 0)
	elseif gui.get_position(gui.get_node("main")).x > 1600 then
		return vmath.vector3(100, 0, 0)
	end
	return vmath.vector3(0)
end

local function create_text(self, text, parent_node)
	local align = get_align()
	local pos = get_pos()
	return richtext.create("<outline=black><size=0.25>" .. text .. "</size></outline>", "ethnocentric_bordered", 
	{
		position = pos,
		parent = parent_node,
		color = vmath.vector4(1),
		align = align,
		width = 600
	})
end

local function update_state(self)
	gui.set_enabled(gui.get_node("bought_gui"), self.bought)
	gui.set_enabled(gui.get_node("purchase_gui"), not self.bought)
	gui.set_text(gui.get_node("level"), self.level)

	for i = 1, self.sub_level do
		if i == 3 then 
			break 
		else
			gui.set_color(gui.get_node("sl_" .. i), vmath.vector4(1, 1, 1, 0.75))
		end
	end

	if self.level == 3 then
		gui.set_color(gui.get_node("sl_1"), vmath.vector4(0))
		gui.set_color(gui.get_node("sl_2"), vmath.vector4(0))
	end

	if self.is_flagship then
		gui.set_color(gui.get_node("flag"), vmath.vector4(1, 0, 1, 0.75))
	end
end

function init(self)
	msg.post(".", "acquire_input_focus")
	self.words = {}
	self.class_words = {}
	self.text = "nil"
	self.class_text = "nil"
	self.align = richtext.ALIGN_CENTER
	self.bought = false
	self.level = 1
	self.sub_level = 1
	self.is_flagship = false
	update_state(self)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("set_position") then
		gui.set_position(gui.get_node("main"), message.pos)
		local align = get_align()
		if self.align ~= align then
			richtext.remove(self.words)
			self.words = create_text(self, self.text, gui.get_node("text_container"))
			self.align = align
		end
	elseif message_id == hash("set_texts") then
		gui.set_text(gui.get_node("name"), message.name)
		gui.set_text(gui.get_node("cost"), message.cost)
		self.text = message.text
		self.class_text = message.class_text
		richtext.remove(self.words)
		richtext.remove(self.class_words)
		self.words = create_text(self, self.text, gui.get_node("text_container"))
		self.class_words = create_text(self, self.class_text, gui.get_node("class_text_container"))
	elseif message_id == hash("update_stats") then
		self.bought = message.bought
		self.level = message.level
		self.sub_level = message.sub_level
		self.is_flagship = message.is_flagship
		update_state(self)
	end	
end

function hide_nodes(self, text_node) 
	gui.animate(text_node, "color.w", 1, gui.EASING_OUTQUINT, 1)
	gui.animate(gui.get_node("info"), "color.w", 0.1, gui.EASING_OUTQUINT, 1)
	gui.animate(gui.get_node("class"), "color.w", 0.1, gui.EASING_OUTQUINT, 1)
	gui.animate(gui.get_node("flag"), "color.w", 0.1, gui.EASING_OUTQUINT, 1)
	gui.animate(gui.get_node("name"), "color.w", 0.1, gui.EASING_OUTQUINT, 1)
	gui.animate(gui.get_node("main"), "color.w", 0.1, gui.EASING_OUTQUINT, 1)
	if not self.bought then
		gui.animate(gui.get_node("buy"), "color.w", 0.1, gui.EASING_OUTQUINT, 1)
		gui.animate(gui.get_node("cost"), "color.w", 0.1, gui.EASING_OUTQUINT, 1)
	else 
		gui.animate(gui.get_node("remove"), "color.w", 0.1, gui.EASING_OUTQUINT, 1)
		gui.animate(gui.get_node("flag"), "color.w", 0.1, gui.EASING_OUTQUINT, 1)
		gui.animate(gui.get_node("level"), "color.w", 0.1, gui.EASING_OUTQUINT, 1)
		gui.animate(gui.get_node("sl_1"), "color.w", 0.1, gui.EASING_OUTQUINT, 1)
		gui.animate(gui.get_node("sl_2"), "color.w", 0.1, gui.EASING_OUTQUINT, 1)
	end
end

function show_nodes(self, text_node)
	gui.animate(text_node, "color.w", 0, gui.EASING_OUTQUINT, 0.5)
	gui.animate(gui.get_node("info"), "color.w", 0.75, gui.EASING_OUTQUINT, 0.5)
	gui.animate(gui.get_node("class"), "color.w", 0.75, gui.EASING_OUTQUINT, 0.5)
	gui.animate(gui.get_node("flag"), "color.w", 0.75, gui.EASING_OUTQUINT, 0.5)
	gui.animate(gui.get_node("name"), "color.w", 0.75, gui.EASING_OUTQUINT, 0.5)
	gui.animate(gui.get_node("main"), "color.w", 0.5, gui.EASING_OUTQUINT, 0.5)
	if not self.bought then
		gui.animate(gui.get_node("buy"), "color.w", 0.75, gui.EASING_OUTQUINT, 0.5)
		gui.animate(gui.get_node("cost"), "color.w", 0.75, gui.EASING_OUTQUINT, 0.5)
	else
		gui.animate(gui.get_node("remove"), "color.w", 0.75, gui.EASING_OUTQUINT, 0.5)
		gui.animate(gui.get_node("flag"), "color.w", 0.75, gui.EASING_OUTQUINT, 0.5)
		gui.animate(gui.get_node("level"), "color.w", 0.75, gui.EASING_OUTQUINT, 0.5)
		gui.animate(gui.get_node("sl_1"), "color.w", 0.75, gui.EASING_OUTQUINT, 0.5)
		gui.animate(gui.get_node("sl_2"), "color.w", 0.75, gui.EASING_OUTQUINT, 0.5)
	end
end

function on_input(self, action_id, action)
	gooey.button("info", action_id, action, function(button)
	end, 
	function(button)
		if button.over_now then 
			hide_nodes(self, gui.get_node("text_container")) 
		elseif button.out_now then
			show_nodes(self, gui.get_node("text_container"))
		end
	end)

	gooey.button("class", action_id, action, function(button)
	end, 
	function(button)
		if button.over_now then 
			hide_nodes(self, gui.get_node("class_text_container")) 
		elseif button.out_now then
			show_nodes(self, gui.get_node("class_text_container"))
		end
	end)

	gooey.button("buy", action_id, action, function(button)
		msg.post(".", "attempt_buy")
	end, 
	function(button)
		if button.over_now then 
			gui.animate(button.node, "scale", vmath.vector3(0.5), gui.EASING_OUTQUINT, 0.5)
		elseif button.out_now then
			gui.animate(button.node, "scale", vmath.vector3(0.4), gui.EASING_OUTQUINT, 0.5)
		end
	end)

	gooey.button("flag", action_id, action, function(button)
		msg.post(".", "set_flagship")
	end, 
	function(button)
		if button.over_now then 
			gui.animate(button.node, "scale", vmath.vector3(1.2), gui.EASING_OUTQUINT, 0.5)
		elseif button.out_now then
			gui.animate(button.node, "scale", vmath.vector3(1), gui.EASING_OUTQUINT, 0.5)
		end
	end)

	gooey.button("remove", action_id, action, function(button)
		msg.post(".", "remove_ship")
	end, 
	function(button)
		if button.over_now then 
			gui.animate(button.node, "scale", vmath.vector3(0.25), gui.EASING_OUTQUINT, 0.25)
		elseif button.out_now then
			gui.animate(button.node, "scale", vmath.vector3(0.2), gui.EASING_OUTQUINT, 0.2)
		end
	end)
end