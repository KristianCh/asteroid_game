local gooey = require "gooey.gooey"

local function update_checkbox(checkbox, checkbox_id, value_id)
	if checkbox.checked then
		gui.play_flipbook(gui.get_node(checkbox_id), hash("checkbox_checked"))
	else
		gui.play_flipbook(gui.get_node(checkbox_id), hash("checkbox_unchecked"))
	end
	msg.post("main:/manager", "apply_setting", {id = value_id, value = checkbox.checked})
end

function init(self)
	msg.post(".", "acquire_input_focus")
end

function on_message(self, message_id, message, sender)
	if message_id == hash("setup") then
		update_checkbox(gooey.checkbox("fullscreen_check").set_checked(message.data.fullscreen), "fullscreen_check", "fullscreen")
		update_checkbox(gooey.checkbox("crt_check").set_checked(message.data.crt_shader), "crt_check", "crt_shader")
		update_checkbox(gooey.checkbox("pixel_check").set_checked(message.data.pixel_shader), "pixel_check", "pixel_shader")
	end	
end

function on_input(self, action_id, action)
	gooey.button("back_button", action_id, action, function(button)
		msg.post("main:/manager", "close_settings")
	end, 
	function(button)
		if button.over_now then 
			gui.animate(button.node, "scale", vmath.vector3(0.65), gui.EASING_OUTQUINT, 0.5)
		elseif button.out_now then
			gui.animate(button.node, "scale", vmath.vector3(0.5), gui.EASING_OUTQUINT, 0.5)
		end
	end)

	gooey.checkbox("fullscreen", action_id, action, function() end, function(checkbox)
		if checkbox.released_now then
			if checkbox.checked_now then
				gui.play_flipbook(gui.get_node("fullscreen_check"), hash("checkbox_checked"))
			else
				gui.play_flipbook(gui.get_node("fullscreen_check"), hash("checkbox_unchecked"))
			end
			msg.post("main:/manager", "apply_setting", {id = "fullscreen", value = checkbox.checked})
		end
		if checkbox.over_now then 
			gui.animate(checkbox.node, "scale", vmath.vector3(1.3), gui.EASING_OUTQUINT, 0.5)
		elseif checkbox.out_now then
			gui.animate(checkbox.node, "scale", vmath.vector3(1), gui.EASING_OUTQUINT, 0.5)
		end
	end)

	gooey.checkbox("crt", action_id, action, function() end, function(checkbox)
		if checkbox.released_now then
			if checkbox.checked_now then
				gui.play_flipbook(gui.get_node("crt_check"), hash("checkbox_checked"))
			else
				gui.play_flipbook(gui.get_node("crt_check"), hash("checkbox_unchecked"))
			end
			msg.post("main:/manager", "apply_setting", {id = "crt_shader", value = checkbox.checked})
		end
		if checkbox.over_now then 
			gui.animate(checkbox.node, "scale", vmath.vector3(1.3), gui.EASING_OUTQUINT, 0.5)
		elseif checkbox.out_now then
			gui.animate(checkbox.node, "scale", vmath.vector3(1), gui.EASING_OUTQUINT, 0.5)
		end
	end)

	gooey.checkbox("pixel", action_id, action, function() end, function(checkbox)
		if checkbox.released_now then
			if checkbox.checked_now then
				gui.play_flipbook(gui.get_node("pixel_check"), hash("checkbox_checked"))
			else
				gui.play_flipbook(gui.get_node("pixel_check"), hash("checkbox_unchecked"))
			end
			msg.post("main:/manager", "apply_setting", {id = "pixel_shader", value = checkbox.checked})
		end
		if checkbox.over_now then 
			gui.animate(checkbox.node, "scale", vmath.vector3(1.3), gui.EASING_OUTQUINT, 0.5)
		elseif checkbox.out_now then
			gui.animate(checkbox.node, "scale", vmath.vector3(1), gui.EASING_OUTQUINT, 0.5)
		end
	end)
end