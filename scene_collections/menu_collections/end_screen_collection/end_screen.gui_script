local gooey = require "gooey.gooey"

function init(self)
	msg.post(".", "acquire_input_focus")
end

function on_message(self, message_id, message, sender) 
	if message_id == hash("display_data") then
		pprint(message)
		if message.success then
			gui.set_text(gui.get_node("result"), "Success!")
			gui.set_color(gui.get_node("result"), vmath.vector4(128/255, 179/255, 128/255, 1))
		end
	end	
end

function on_input(self, action_id, action)
	gooey.button("new_game_button", action_id, action, function(button)
		msg.post("main:/manager", "new_from_end")
	end, 
	function(button)
		if button.over_now then 
			gui.animate(button.node, "scale", vmath.vector3(1.2), gui.EASING_OUTQUINT, 1.2)
		elseif button.out_now then
			gui.animate(button.node, "scale", vmath.vector3(1), gui.EASING_OUTQUINT, 1)
		end
	end)

	gooey.button("main_menu_button", action_id, action, function(button)
		msg.post("main:/manager", "main_from_end")
	end, 
	function(button)
		if button.over_now then 
			gui.animate(button.node, "scale", vmath.vector3(1.2), gui.EASING_OUTQUINT, 1.2)
		elseif button.out_now then
			gui.animate(button.node, "scale", vmath.vector3(1), gui.EASING_OUTQUINT, 1)
		end
	end)
	
	--[[if action_id == hash("mouse_left") and action.released then
		if gui.pick_node(gui.get_node("new_game_button"), action.x, action.y) then
			msg.post("main:/manager", "new_from_end")
		end
		if gui.pick_node(gui.get_node("main_menu_button"), action.x, action.y) then
			msg.post("main:/manager", "main_from_end")
		end
	end]]--
end