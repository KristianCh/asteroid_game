local val = 0

function init(self)
	msg.post(".", "acquire_input_focus")
end

function update(self, dt)
	
end

function on_message(self, message_id, message, sender)
	if message_id == hash("update_wave") then
		local display_node = gui.get_node("wave_display")
		gui.set_text(display_node, "Wave: " .. message.current_wave .. "/" .. message.max_wave)
		gui.animate(display_node, gui.PROP_POSITION, vmath.vector3(960, 508.5, 0), gui.EASING_INOUTQUINT, 5, 0, nil, gui.PLAYBACK_ONCE_PINGPONG)
		gui.animate(display_node, "scale", vmath.vector3(2, 2, 1), gui.EASING_INOUTQUINT, 5, 0, nil, gui.PLAYBACK_ONCE_PINGPONG)
	end	
end

function on_input(self, action_id, action)
	if action_id == hash("mouse_left") and action.released then
		if gui.pick_node(gui.get_node("store"), action.x, action.y) then
			msg.post("main:/manager", "store_from_game")
		end
		if gui.pick_node(gui.get_node("end"), action.x, action.y) then
			msg.post("main:/manager", "end_from_game")
		end
		if gui.pick_node(gui.get_node("settings"), action.x, action.y) then
			msg.post("main:/manager", "open_settings")
		end
		if gui.pick_node(gui.get_node("main"), action.x, action.y) then
			msg.post("main:/manager", "return_to_main")
		end
	end
end