local gooey = require "gooey.gooey"
local is_paused = false

local function pause()
	msg.post("main:/manager", "toggle_game_pause")
	is_paused = is_paused ~= true
	if is_paused then
		gui.animate(gui.get_node("pause"), "color", vmath.vector4(1, 0, 0, 0.5), gui.EASING_INOUTQUAD, 1, 0, nil, gui.PLAYBACK_ONCE_FORWARD)
	else
		gui.animate(gui.get_node("pause"), "color", vmath.vector4(1, 1, 1, 0.5), gui.EASING_INOUTQUAD, 1, 0, nil, gui.PLAYBACK_ONCE_FORWARD)
	end
end

function init(self)
	msg.post(".", "acquire_input_focus")
end

function on_message(self, message_id, message, sender)
	if message_id == hash("update_wave") then
		local display_node = gui.get_node("wave_display")
		gui.set_text(display_node, "Wave: " .. message.current_wave .. "/" .. message.max_wave)
		gui.animate(display_node, gui.PROP_POSITION, vmath.vector3(960, 508.5, 0), gui.EASING_INOUTQUINT, 5, 0, nil, gui.PLAYBACK_ONCE_PINGPONG)
		gui.animate(display_node, "scale", vmath.vector3(2, 2, 1), gui.EASING_INOUTQUINT, 5, 0, nil, gui.PLAYBACK_ONCE_PINGPONG)
	elseif message_id == hash("update_stage") then
		local display_node = gui.get_node("stage_display")
		gui.set_text(display_node, "Stage: " .. message.stage)
	end	
end

function on_input(self, action_id, action)
	if action_id == hash("esc") and action.released then
		pause()
	end
	gooey.button("pause", action_id, action, pause, function(button) end)
end