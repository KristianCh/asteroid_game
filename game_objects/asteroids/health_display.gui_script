
function update(self, dt)
	local fill_angle = gui.get_fill_angle(gui.get_node("pie"))
	local target_fill_angle = gui.get_scale(gui.get_node("target_fill_angle"))
	fill_angle = vmath.lerp(dt * 5, vmath.vector3(fill_angle), target_fill_angle).x
	if fill_angle > 360 then fill_angle = 360 end
	if fill_angle < 0 then fill_angle = 0 end
	gui.set_fill_angle(gui.get_node("pie"), fill_angle)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("set_pos") then
		gui.set_position(gui.get_node("pie"), message.pos)
	elseif message_id == hash("set_health") then
		local angle = message.health / message.max_health
		if angle < 0 then angle = 0 end
		gui.set_scale(gui.get_node("target_fill_angle"), vmath.vector3(angle * 360, 1, 1))
	elseif message_id == hash("set_scale") then
		gui.set_scale(gui.get_node("pie"), message.scale)
		gui.set_inner_radius(gui.get_node("pie"), 55 + (1.2 - message.scale.x) * 7)
	end	
end